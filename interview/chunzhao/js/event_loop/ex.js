Promise.resolve().then(()=>{
    console.log('第一个回调函数：微任务1')  
    setTimeout(()=>{
      console.log('第三个回调函数：宏任务2')
    },0)
  })
  setTimeout(()=>{
    console.log('第二个回调函数：宏任务1')
    Promise.resolve().then(()=>{
      console.log('第四个回调函数：微任务2')   
    })
  },0)
  // 第一个回调函数：微任务1
  // 第二个回调函数：宏任务1
  // 第四个回调函数：微任务2
  // 第三个回调函数：宏任务2
// 题解：不管微任务还是宏任务不看里面,看整体，只看外面，先执行同步代码的顺序去收集微任务和宏任务：
// 该题为         先执行微任务1，微任务里面有宏任务2,  然后执行宏任务1，宏任务里面有微任务2，
// 微任务： 1   =>      =>  2  =>  
// 宏任务： 1   => 1,2  =>  2  =>  2